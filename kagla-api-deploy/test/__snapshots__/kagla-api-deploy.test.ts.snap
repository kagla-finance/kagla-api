// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`kagla-api-deploy Api 1`] = `
Object {
  "Outputs": Object {
    "kaglaapiastarserviceLoadBalancerDNS897BCB0E": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "kaglaapiastarserviceLBF147A95E",
          "DNSName",
        ],
      },
    },
    "kaglaapiastarserviceServiceURL1416B272": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "http://",
            Object {
              "Fn::GetAtt": Array [
                "kaglaapiastarserviceLBF147A95E",
                "DNSName",
              ],
            },
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "EcsDefaultClusterMnL3mNNYN926A5246": Object {
      "Type": "AWS::ECS::Cluster",
    },
    "EcsDefaultClusterMnL3mNNYNVpc7788A521": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/EcsDefaultClusterMnL3mNNYN/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "EcsDefaultClusterMnL3mNNYNVpcIGW9C2C2B8F": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/EcsDefaultClusterMnL3mNNYN/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1DefaultRouteA5ADF694": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1NATGateway5E3732C1",
        },
        "RouteTableId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1RouteTable4F1D2E36",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1RouteTable4F1D2E36": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1RouteTableAssociation34B92275": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1RouteTable4F1D2E36",
        },
        "SubnetId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1Subnet075EFF4C",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1Subnet075EFF4C": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2DefaultRoute20CE2D89": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2NATGateway4C855E00",
        },
        "RouteTableId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2RouteTableDCE46591",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2RouteTableAssociation111C622F": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2RouteTableDCE46591",
        },
        "SubnetId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2SubnetE4CEDF73",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2RouteTableDCE46591": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2SubnetE4CEDF73": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/EcsDefaultClusterMnL3mNNYN/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1DefaultRouteFF4E2178": Object {
      "DependsOn": Array [
        "EcsDefaultClusterMnL3mNNYNVpcVPCGW2447264E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpcIGW9C2C2B8F",
        },
        "RouteTableId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1RouteTableA1FD6ACC",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1EIP8704DB2F": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1NATGateway5E3732C1": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1EIP8704DB2F",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1Subnet3C273B99",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1RouteTableA1FD6ACC": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1RouteTableAssociation8B583A17": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1RouteTableA1FD6ACC",
        },
        "SubnetId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1Subnet3C273B99",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1Subnet3C273B99": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2DefaultRouteB1375520": Object {
      "DependsOn": Array [
        "EcsDefaultClusterMnL3mNNYNVpcVPCGW2447264E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpcIGW9C2C2B8F",
        },
        "RouteTableId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2RouteTable263DEAA5",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2EIPF0764873": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2NATGateway4C855E00": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2EIPF0764873",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2Subnet95FF715A",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2RouteTable263DEAA5": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2RouteTableAssociation43E5803C": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2RouteTable263DEAA5",
        },
        "SubnetId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2Subnet95FF715A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2Subnet95FF715A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "TestStack/EcsDefaultClusterMnL3mNNYN/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "EcsDefaultClusterMnL3mNNYNVpcVPCGW2447264E": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpcIGW9C2C2B8F",
        },
        "VpcId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "kaglaapiastarserviceLBF147A95E": Object {
      "DependsOn": Array [
        "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1DefaultRouteFF4E2178",
        "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2DefaultRouteB1375520",
      ],
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "kaglaapiastarserviceLBSecurityGroupFD04DE56",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet1Subnet3C273B99",
          },
          Object {
            "Ref": "EcsDefaultClusterMnL3mNNYNVpcPublicSubnet2Subnet95FF715A",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "kaglaapiastarserviceLBPublicListenerECSGroupD129C80A": Object {
      "Properties": Object {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": Array [
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "kaglaapiastarserviceLBPublicListenerFABB7244": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "kaglaapiastarserviceLBPublicListenerECSGroupD129C80A",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "kaglaapiastarserviceLBF147A95E",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "kaglaapiastarserviceLBSecurityGroupFD04DE56": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB TestStackkaglaapiastarserviceLBDDDBDC9A",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "kaglaapiastarserviceLBSecurityGrouptoTestStackkaglaapiastarserviceServiceSecurityGroup31CAF0AB30009ADA6AC5": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "kaglaapiastarserviceServiceSecurityGroup5BBDB97B",
            "GroupId",
          ],
        },
        "FromPort": 3000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "kaglaapiastarserviceLBSecurityGroupFD04DE56",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "kaglaapiastarserviceServiceA9EE7466": Object {
      "DependsOn": Array [
        "kaglaapiastarserviceLBPublicListenerECSGroupD129C80A",
        "kaglaapiastarserviceLBPublicListenerFABB7244",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYN926A5246",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": Array [
          Object {
            "ContainerName": "web",
            "ContainerPort": 3000,
            "TargetGroupArn": Object {
              "Ref": "kaglaapiastarserviceLBPublicListenerECSGroupD129C80A",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "kaglaapiastarserviceServiceSecurityGroup5BBDB97B",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet1Subnet075EFF4C",
              },
              Object {
                "Ref": "EcsDefaultClusterMnL3mNNYNVpcPrivateSubnet2SubnetE4CEDF73",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "kaglaapiastarserviceTaskDef181D3B67",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "kaglaapiastarserviceServiceSecurityGroup5BBDB97B": Object {
      "Properties": Object {
        "GroupDescription": "TestStack/kagla-api-astar-service/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "EcsDefaultClusterMnL3mNNYNVpc7788A521",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "kaglaapiastarserviceServiceSecurityGroupfromTestStackkaglaapiastarserviceLBSecurityGroup8DD6E0FB3000E474A206": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 3000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "kaglaapiastarserviceServiceSecurityGroup5BBDB97B",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "kaglaapiastarserviceLBSecurityGroupFD04DE56",
            "GroupId",
          ],
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "kaglaapiastarserviceServiceTaskCountTarget5CC47278": Object {
      "Properties": Object {
        "MaxCapacity": 3,
        "MinCapacity": 1,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "EcsDefaultClusterMnL3mNNYN926A5246",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "kaglaapiastarserviceServiceA9EE7466",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "kaglaapiastarserviceServiceTaskCountTargetscaleoncpuutilization1749B5F1": Object {
      "Properties": Object {
        "PolicyName": "TestStackkaglaapiastarserviceServiceTaskCountTargetscaleoncpuutilization3776A05A",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": Object {
          "Ref": "kaglaapiastarserviceServiceTaskCountTarget5CC47278",
        },
        "TargetTrackingScalingPolicyConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 80,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "kaglaapiastarserviceTaskDef181D3B67": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Environment": Array [
              Object {
                "Name": "CHAIN_ID",
                "Value": "592",
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::AccountId",
                  },
                  ".dkr.ecr.",
                  Object {
                    "Ref": "AWS::Region",
                  },
                  ".",
                  Object {
                    "Ref": "AWS::URLSuffix",
                  },
                  "/aws-cdk/assets:63f8033d269d29ea4eb4b44aab4f8db5883e3a073b69ba09c951adf36c3adbbd",
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "kaglaapiastarserviceTaskDefwebLogGroup9015BE6B",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "kagla-api-astar-service",
              },
            },
            "Name": "web",
            "PortMappings": Array [
              Object {
                "ContainerPort": 3000,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "kaglaapiastarserviceTaskDefExecutionRoleCA093257",
            "Arn",
          ],
        },
        "Family": "TestStackkaglaapiastarserviceTaskDef6E699E10",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "kaglaapiastarserviceTaskDefTaskRole1A62296B",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "kaglaapiastarserviceTaskDefExecutionRoleCA093257": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "kaglaapiastarserviceTaskDefExecutionRoleDefaultPolicy0BC2F260": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/aws-cdk/assets",
                  ],
                ],
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "kaglaapiastarserviceTaskDefwebLogGroup9015BE6B",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "kaglaapiastarserviceTaskDefExecutionRoleDefaultPolicy0BC2F260",
        "Roles": Array [
          Object {
            "Ref": "kaglaapiastarserviceTaskDefExecutionRoleCA093257",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "kaglaapiastarserviceTaskDefTaskRole1A62296B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "kaglaapiastarserviceTaskDefwebLogGroup9015BE6B": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "webdistributionkaglaapiastarCFDistribution21CA9586": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
            ],
            "CachedMethods": Array [
              "GET",
              "HEAD",
            ],
            "Compress": true,
            "ForwardedValues": Object {
              "Cookies": Object {
                "Forward": "none",
              },
              "QueryString": false,
            },
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "CustomOriginConfig": Object {
                "HTTPPort": 80,
                "HTTPSPort": 443,
                "OriginKeepaliveTimeout": 60,
                "OriginProtocolPolicy": "http-only",
                "OriginReadTimeout": 30,
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "kaglaapiastarserviceLBF147A95E",
                  "DNSName",
                ],
              },
              "Id": "origin1",
            },
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": Object {
            "CloudFrontDefaultCertificate": true,
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
  },
}
`;

exports[`kagla-api-deploy Certificate 1`] = `
Object {
  "Resources": Object {
    "Certificate": Object {
      "Properties": Object {
        "DomainName": "test.example.com",
        "SubjectAlternativeNames": Array [
          "*.test.example.com",
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
    },
  },
}
`;
